---
import type { GetStaticPaths } from "astro";
import type {PokemonListResponse } from "../../interfaces/pokemon-list-response"
import { Icon } from 'astro-icon/components'
import PokemonCard from '../../components/pokemons/PokemonCard.astro';
import MainLayout from "../../layout/MainLayout.astro";
import Title from "../../components/shared/Title.astro";
export const getStaticPaths = ( async() => {

    const resp = await fetch ('https://pokeapi.co/api/v2/pokemon?limit=151')
    const {results } = (await resp.json()) as PokemonListResponse;

    return results.map(({name, url}) => ({
        params: { name},
        props: { name, url},
    }))
}) satisfies GetStaticPaths;
const { name } = Astro.params;
const { url } = Astro.props;
const id = url.split('/').at(-2);
const audioSrc = `https://raw.githubusercontent.com/PokeAPI/cries/main/cries/pokemon/latest/${id}.ogg`;

---
<MainLayout title="Algun Pokemon">
    <section class=" mt-10 mx-10 flex flex-col justify-center items-center">
        <div class=" flex flex-row">
            <div>
                <button
                    class=" text-blue-500"
                    onclick="history.back()"
                >
                    Regresar
                </button>
                <Title>{name}</Title>
            </div>
            <button id="btn-favorite" class=" ml-4" data-name={name} data-id={id}>
                <Icon data-outline name="heart-outline" size={50}/>
                <Icon data-full class=" hidden " name="heart-full" size={50}/>
            </button>
        </div>
        <PokemonCard name={name} url={url} isBig />
        <audio controls class="mt-5">
            <source src={audioSrc} type="audio/ogg" >
            You browser does not support the audio element
        </source>
        </audio>
    </section>
</MainLayout>
<script>
    interface FavoritePokemon {
        name: string;
        id: number;
    }
    const handlePageLoad = () => {
        let favoritesPokemons: FavoritePokemon[] = JSON.parse(localStorage.getItem('favorites') || '[]');
        const btnFavorite = document.querySelector(
            '#btn-favorite'
        ) as HTMLButtonElement
        if (!btnFavorite) return;
        const name = btnFavorite.dataset.name ?? '';
        const id = btnFavorite.dataset.id ?? '';
        const hearOutline = btnFavorite.querySelector('[data-outline]') as HTMLElement;
        const hearFull = btnFavorite.querySelector('[data-full]') as HTMLElement;
        const isFavorite = favoritesPokemons.some(fav => fav.name === name);
        if (isFavorite) {
            hearOutline.classList.add('hidden');
            hearFull.classList.remove('hidden');
        }
        const toggleFavorite = () => {
            const isFavorite = favoritesPokemons.some(fav => fav.name === name)
            if (isFavorite) {
                favoritesPokemons = favoritesPokemons.filter(fav => fav.name !== name);
            } else {
                favoritesPokemons.push({
                    id: +id,
                    name: name });
            }
            localStorage.setItem('favorites', JSON.stringify(favoritesPokemons));
        }
        btnFavorite.addEventListener('click', () => {
            hearOutline.classList.toggle('hidden');
            hearFull.classList.toggle('hidden');
            toggleFavorite();
        })
    }
    document.addEventListener("astro:page-load", handlePageLoad)
</script>

<style>
    a {
        @apply hover:underline text-blue-500;
    }
    #btn-favorite {
        @apply hover:animate-pulse;
    }
</style>
